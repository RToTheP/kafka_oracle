services:
  # oracle-test-db:
  #   image: gvenzl/oracle-xe
  #   ports:
  #     - 1521:1521
  #   environment:
  #     - ORACLE_PASSWORD=badger
  #   volumes:
  #     - ${PWD}/scripts:/tmp/scripts
  #     - ${PWD}/scripts/setup_db.sh:/container-entrypoint-initdb.d/1_setup_db.sh

  #   healthcheck:
  #     test: ["CMD", "cat", "/tmp/setup_complete"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 20
  #     start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      # test: kafka-topics --bootstrap-server localhost:29092 --list
      test: ["CMD","kafka-topics","--bootstrap-server","localhost:29092","--list"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 30s

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #     DYNAMIC_CONFIG_ENABLED: 'true'

  code:
      image: ko-code
      depends_on:
        # oracle-test-db:
        #   condition: service_healthy
        kafka:
          condition: service_healthy
      build:
        context: ${PWD}/.
        dockerfile: ${PWD}/docker/Dockerfile
      env_file:
        - ${PWD}/.env
        - docker.env
      command: pytest

  
